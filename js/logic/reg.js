// https://deerchao.cn/tutorials/regex/regex.htm#metacode

// 已学到的技巧
// 1. 
// 贪婪
// .*?
// 2.
// 组 ()  后向引用 (?<name>exp)  \k<name>使用  没命名 \1
// 3. 
// 取非  [^] \大写
// 4. | 能管多宽
//   /abc|efg/   能匹到 abc  efg  能管前面的全部 没组的话   * ? + 只能管前面一个
// 5. 方法 match   exec   前者字符串调用 后者正则调用

// 匹配标签
// code----------
// var reg = /<[^<>]+>/g;
// let str = '<abc>sdf</abc>'
// str.match(reg) // ['<abc>','</abc>']
// -----------
// 该正则组成
// /<>/g
// /[^<>]+/ 可以匹配嵌套标签  [^] 此时的^不是头匹的意思了 是取反 除了<> 啥都匹 还多次  等价于 <除了<>什么都匹> 全局

//code--------
let reg = /<!\[CDATA\[[^(\]\]\>)]*\]\]>/
let str = 'sdfsdf<![CDATA[<div>]]>sdfs'
console.log(str.match(reg));
// --------------
// ( ) 这是组

// .*? 贪婪
// code-------
// let str = '<![CDATA[<<<<<<<]>]>]]>'
// let reg = /<!\[CDATA\[.*?\]\]>/
// --------------

// 重复字母
// code---
// let reg = /([a-z])\1+/g  // 1=需要重复的次数 - 1 \1占了一次 一定要用组 不用组不行
// let str = 'aabb'
//---



// 练习 
// 匹配 <9个以内的大写字母>
// -----------------
let str = '<ABC>'
let reg = /<[A-Z]{1,9}>/
// 只要不是 都匹不到
// --------------------

// 连续两个相同字符
// code-----------
let str = 'aa ba cc'
let reg = /(\w)\1/g
// ----------------







